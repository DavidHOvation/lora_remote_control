/**
 * VT100 macros to allow the easy construction of static VT100 escape sequences
 *
 * Ref:
 * - https://www2.ccs.neu.edu/research/gpc/VonaUtils/vona/terminal/vtansi.htm
 * - https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences
 *
 * @author David Hughes
 * @date   30Jun23
 *
 */
#pragma once

#define VT100_ESC         "\033"
#define VT100_STR(String) #String


/**
 * Device Status
 *
 * The following codes are used for reporting terminal/display settings, and
 * vary depending on the implementation:
 */

//! Requests a Report Device Code response from the device.
#define VT100_QueryDeviceCode                       VT100_ESC "[c"

//! Generated by the device in response to Query Device Code request.
#define VT100_ReportDeviceCode(Code)                VT100_ESC "[" VT100_STR(Code) "0c"

//! Requests a Report Device Status response from the device.
#define VT100_QueryDeviceStatus                     VT100_ESC "[5n"

//! Generated by the device in response to a Query Device Status request;
//! indicates that device is functioning correctly.
#define VT100_ReportDeviceOK                        VT100_ESC "[0n"

//! Generated by the device in response to a Query Device Status request;
//! indicates that device is functioning improperly.
#define VT100_ReportDeviceFailure                   VT100_ESC "[3n"

//! Requests a Report Cursor Position response from the device.
#define VT100_QueryCursorPosition                   VT100_ESC "[6n"

//! Generated by the device in response to a Query Cursor Position request;
//! reports current cursor position.
//! @note Row, Column are numbered from 1; (1,1) is top-left
#define VT100_ReportCursorPosition(Row, Column)     VT100_ESC "[" VT100_STR(Row) ";" VT100_STR(Column) "R"


/**
 * Terminal Setup
 *
 * The h and l codes are used for setting terminal/display mode, and vary
 * depending on the implementation. Line Wrap is one of the few setup codes that
 * tend to be used consistently:
 */

//! Reset all terminal settings to default.
#define VT100_ResetDevice                           VT100_ESC "c"

//! Text wraps to next line if longer than the length of the display area.
#define VT100_EnableLineWrap                        VT100_ESC "[7h"

//! Disables line wrapping.
#define VT100_DisableLineWrap                       VT100_ESC "[7l"


/**
 * Fonts
 *
 * Some terminals support multiple fonts: normal/bold, swiss/italic, etc. There
 * are a variety of special codes for certain terminals; the following are
 * fairly standard:
 */

//! Set default font.
#define VT100_FontSetG0                             VT100_ESC "("

//! Set alternate font.
#define VT100_FontSetG1                             VT100_ESC ")"


/**
 * Cursor Control
 */

//! Sets the cursor position where subsequent text will begin.
//! @note Row, Column are numbered from 1; (1,1) is top-left
#define VT100_CursorHome                                VT100_ESC "[H"
#define VT100_CursorPosition(RowStr, ColumnStr)         VT100_ESC "[" RowStr ";" ColumnStr "H"

//! Moves the cursor up by Count rows; the default count is 1.
#define VT100_CursorUp1                                 VT100_ESC "[A"
#define VT100_CursorUp(CountStr)                        VT100_ESC "[" CountStr "A"

//! Moves the cursor down by Count rows; the default count is 1.
#define VT100_CursorDown1                               VT100_ESC "[B"
#define VT100_CursorDown(CountStr)                      VT100_ESC "[" CountStr "B"

//! Moves the cursor forward by Count columns; the default count is 1.
#define VT100_CursorForward1                            VT100_ESC "[C"
#define VT100_CursorForward(CountStr)                   VT100_ESC "[" CountStr "C"

//! Moves the cursor backward by Count columns; the default count is 1.
#define VT100_CursorBackward1                           VT100_ESC "[D"
#define VT100_CursorBackward(CountStr)                  VT100_ESC "[" CountStr "D"

//! Identical to Cursor Home.
#define VT100_ForceCursorPosition(RowStr, ColumnStr)    VT100_ESC "[" RowStr ";" ColumnStr "f"

//! Save current cursor position.
//! @note Seems to only save the column position!
#define VT100_SaveCursor                                VT100_ESC "[s"

//! Restores cursor position after a Save Cursor.
#define VT100_UnsaveCursor                              VT100_ESC "[u"

//! Save current cursor position and attributes.
//! @note Seems to only save the column position!
#define VT100_SaveCursorAndAttrs                        VT100_ESC "7"

//! Restores cursor position and attributes after a Save Cursor.
#define VT100_RestoreCursorAndAttrs                     VT100_ESC "8"


/**
 * Scrolling
 */

//! Enable scrolling for entire display.
#define VT100_ScrollScreenEnableAll                     VT100_ESC "[r"

//! Enable scrolling from row Start to row End. Note: Rows number from 1.
#define VT100_ScrollScreenEnableSection(StartStr, EndStr)   VT100_ESC "[" StartStr ";" EndStr "r"

//! Scroll display down one line.
#define VT100_ScrollDown                            VT100_ESC "D"

//! Scroll display up one line.
#define VT100_ScrollUp                              VT100_ESC "M"


/**
 * Tab Control
 */

//! Sets a tab at the current position.
#define VT100_SetTab                                VT100_ESC "H"

//! Clears tab at the current position.
#define VT100_ClearTab                              VT100_ESC "[g"

//! Clears all tabs.
#define VT100_ClearAllTabs                          VT100_ESC "[3g"


/**
 * Erasing Text
 */

//! Erases from the current cursor position to the end of the current line.
#define VT100_EraseEndOfLine                        VT100_ESC "[K"

//! Erases from the current cursor position to the start of the current line.
#define VT100_EraseStartOfLine                      VT100_ESC "[1K"

//! Erases the entire current line.
#define VT100_EraseLine                             VT100_ESC "[2K"

//! Erases the screen from the current line down to the bottom of the screen.
#define VT100_EraseDown                             VT100_ESC "[J"

//! Erases the screen from the current line up to the top of the screen.
#define VT100_EraseUp                               VT100_ESC "[1J"

//! Erases the screen with the background colour and moves the cursor to home.
#define VT100_EraseScreen                           VT100_ESC "[2J"


/**
 * Printing
 *
 * Some terminals support local printing:
 */

//! Print the current screen.
#define VT100_PrintScreen                           VT100_ESC "[i"

//! Print the current line.
#define VT100_PrintLine                             VT100_ESC "[1i"

//! Disable log.
#define VT100_StopPrintLog                          VT100_ESC "[4i"

//! Start log; all received text is echoed to a printer.
#define VT100_StartPrintLog                         VT100_ESC "[5i"


/**
 * Define Key
 */

//! Associates a string of text to a keyboard key. {key} indicates the key by its
//! ASCII value in decimal.
#define VT100_SetKeyDefinition(KeyStr, String)         VT100_ESC "[" (KeyStr) ";" (String) "p"


/**
 * Set Display Attributes
 */

//! Sets multiple display attribute settings.
#define VT100_SetAttributeMode1(Attr1)               VT100_ESC "[" VT100_STR(Attr1) "m"
#define VT100_SetAttributeMode2(Attr1, Attr2)        VT100_ESC "[" VT100_STR(Attr1) ";" VT100_STR(Attr2) "m"
#define VT100_SetAttributeMode3(Attr1, Attr2, Attr3) VT100_ESC "[" VT100_STR(Attr1) ";" VT100_STR(Attr2) ";" VT100_STR(Attr3) "m"

//! The following lists standard attributes:
#define VT100_ResetAll                              0
#define VT100_Bright                                1
#define VT100_Dim                                   2
#define VT100_Underscore                            4
#define VT100_Blink                                 5
#define VT100_Reverse                               7
#define VT100_Hidden                                8

//Foreground Colours
#define VT100_ForegroundBlack                       30
#define VT100_ForegroundRed                         31
#define VT100_ForegroundGreen                       32
#define VT100_ForegroundYellow                      33
#define VT100_ForegroundBlue                        34
#define VT100_ForegroundMagenta                     35
#define VT100_ForegroundCyan                        36
#define VT100_ForegroundWhite                       37
#define VT100_ForegroundExtended                    38  // Maybe Windows-only
#define VT100_ForegroundDefault                     39  // Maybe Windows-only

//Background Colours
#define VT100_BackgroundBlack                       40
#define VT100_BackgroundRed                         41
#define VT100_BackgroundGreen                       42
#define VT100_BackgroundYellow                      43
#define VT100_BackgroundBlue                        44
#define VT100_BackgroundMagenta                     45
#define VT100_BackgroundCyan                        46
#define VT100_BackgroundWhite                       47
#define VT100_BackgroundExtended                    48  // Maybe Windows-only
#define VT100_BackgroundDefault                     49  // Maybe Windows-only

// Maybe Windows-only
#define VT100_BrightForegroundBlack                 90
#define VT100_BrightForegroundRed                   91
#define VT100_BrightForegroundGreen                 92
#define VT100_BrightForegroundYellow                93
#define VT100_BrightForegroundBlue                  94
#define VT100_BrightForegroundMagenta               95
#define VT100_BrightForegroundCyan                  96
#define VT100_BrightForegroundWhite                 97

#define VT100_BrightBackgroundBlack                 100
#define VT100_BrightBackgroundRed                   101
#define VT100_BrightBackgroundGreen                 102
#define VT100_BrightBackgroundYellow                103
#define VT100_BrightBackgroundBlue                  104
#define VT100_BrightBackgroundMagenta               105
#define VT100_BrightBackgroundCyan                  106
#define VT100_BrightBackgroundWhite                 107

//! Convenience macro to reset all the attributes
#define VT100_ResetAttributeMode                    VT100_ESC "[0m"

